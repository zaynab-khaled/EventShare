package ajman.university.grad.project.eventshare.common.services;


import ajman.university.grad.project.eventshare.common.contracts.ILocalNotificationService;
import ajman.university.grad.project.eventshare.common.helpers.ApplicationContextProvider;
import ajman.university.grad.project.eventshare.common.models.Event;
import android.app.ListActivity;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.support.v4.app.NotificationCompat;
import android.support.v4.app.TaskStackBuilder;


public class LocalNotificationService implements ILocalNotificationService {

	@Override
	public void showNotification(Event event) {
        Intent mainIntent =  new Intent(getApplicationContext(), ListActivity.class);

        // Let the notification get into the activity but make sure that the activity behaves well in back-pressed
        // situation
        TaskStackBuilder taskStackBuilder = TaskStackBuilder.create(getApplicationContext());
        //taskStackBuilder.addNextIntentWithParentStack(mainIntent);
        //PendingIntent pendingIntent = taskStackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);

        String title = getEventTitle(event);
        String subtitle = getEventSubtitle(event);
        String message = getEventMessage(event);

        // Add the Big Text Style
        NotificationCompat.BigTextStyle bigTextStyle = new NotificationCompat.BigTextStyle();
        bigTextStyle.setBigContentTitle(title)
            .setSummaryText(message)
            .bigText(subtitle);
        
        NotificationCompat.Builder builder = new NotificationCompat.Builder(getApplicationContext());
        builder.setContentTitle(title)
              .setContentText(message)
               //.setContentIntent(pendingIntent)
               .setAutoCancel(true)
           .setStyle(bigTextStyle);

        Notification notification = builder.build();
        NotificationManager mgr = (NotificationManager) getApplicationContext().getSystemService(Context.NOTIFICATION_SERVICE);
        mgr.notify(this.getClass().getName(), event.getId(), notification);
	}

    public void removeNotification(Event event) {
        NotificationManager mgr = (NotificationManager) getApplicationContext().getSystemService(Context.NOTIFICATION_SERVICE);
        mgr.cancel(this.getClass().getName(), event.getId());
    }

    private String getEventTitle(Event event) {
    	// TODO:
    	return "title";
    }

    private String getEventSubtitle(Event event) {
    	// TODO:
    	return "subtitle";
    }

    private String getEventMessage(Event event) {
    	// TODO:
    	return "message";
    }

    private Context getApplicationContext() {
		return ApplicationContextProvider.getContext();		
	}
}
